<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuncelle.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        1QAADdUBPdZY8QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAROSURBVFhHvVdf
        bFNlFG808clEmdFkSgZkA/bH3tt7b4tDZRAwvqjExKCJhAcwAiFoiCMy59o7tjrBGISFB2OM8sA0amIk
        yCbzzYjxQTbGNFnJZHTdZtfS29v13xbaHc857W3uZnHtvPMkv/Tcc+89v9/3fed+PZ/tv5qqqvfk3ZU3
        5YTygKi6HGK7vFtQlQ9Ej/SD2OH0C21Sf71af1/+MWtM9sqVdlVqcqjyIST7RPDIvyBCYrsCUtcmkN/f
        BNJ7LpC8LhDa5LnaFtdD+VfLN6mrsUZQ5eftqtwqeJSv7G55WHDLcUenk4mYDImIHEUA3iuAY25Zs221
        3Z9PV54JbukSJsnQaJgIR0fExciKISdAiXZe6F6n6/oqf4kAgFUswNGJI1N5FMtCXasdNndumb85FdBi
        M6lIWIstiduIRGo2cjsa68MZKJ64VJCAJ71NMBkJQXo2CzPJdMmYvZMFywQEpoOQSt4BnAXQ9Djg6Bjk
        U2xx3EDZAhreFRnGNS+Bdwv87vfBZDgEY8EJiERnmIxAPsWMeFRPLC1gMQlB9ChQi2SGb75P101ndsC2
        7mdg86mnYV/PAYjoORGv9RyERowRKB7W9AUz8Q8BlJgSkl/7zuMFfyP6Do8TBm4NwsDYIPuGCBZwejts
        7d4BT5x6Cvaef70gYF/Pfo4Z8X8VYJBfHRuAIf8QOI83wvpjdWBvk6DqaDVcuHoRvx6A0eAo2N0SP2/U
        wEhgFKY1DQKhIBOYQTFz3CAvKoDIRiZ9TPSz7wqOvAEefrMSui6e4FginYAXTr8INcdq+Z2CgIk/IaRF
        YSI8DdFYokBGPsXM8bsKIKxvqYPtJ5+FoD7NhOevfAGvfrwHMpkMXzd/+TY89tbawtIQeAmsqgFKVtVc
        DS+dfQXi6TiTzs3N8e9nP52D1UhO07/4HUtqwJyw8kgVHDh3CLLZLJNfHx+GtUdroL5VWPCspTVgBo20
        u/8sk5PFUjHY//lBjK9bMP2W1wAlJ/IjPc1MnEwnofdaX86fTeLSvMxLZBbBS2BVDVB1P/fRToincutP
        1V9x+BH49rfv+JqKk4qUitV4hwVYtQ/QZ3hj6gaTfT/YC2tw3Te01MPGlgb+LMl8Uz5+bkX2ARoN7XRD
        /usgqS7eByhGG5KzvZHj124NFXZCy2vAEEG+eSumX7om37wNG/csqwECJTcTLHWPBVi5D5QDWgL6Ox72
        j/A03/wrwImJxCCimBEv6e+4HBg18L81JIthCMi1ZJmirVcxxBDcknFTmi+05YCXgJvScR1HqWHDWRKw
        KdWwQb1swzNAn3hcyS5oyzuwLadOuZy2vPdMNbblFaVifn6+gttyMqHLtcGuOncioRvxDSb+A88LSfPB
        xLFSB5O7mXRSehRnYRuelN4QVflTu0f+FYnCRGj50axUE1XxQbtXloV25x4U9SHORr+jQxlHAT9afjgt
        1XZ9vevevLsMs9n+BooLa1f5BfEVAAAAAElFTkSuQmCC
</value>
  </data>
</root>